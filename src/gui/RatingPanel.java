/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.JLabel;

/**
 *
 * @author thuy
 */
public class RatingPanel extends javax.swing.JPanel implements MouseListener {

    /**
     * Creates new form RatingPanel
     */
    ArrayList<Star> startList = new ArrayList<>();
    int numOfStar;
    double R;
    double YPos = 0;

    public RatingPanel(int numOfStar, double R) {
        this.numOfStar = numOfStar;
        this.R = R;
        initComponentAndStar();
    }

    public RatingPanel(int numOfStar) {
        this.numOfStar = numOfStar;
        this.R = 20;
        initComponentAndStar();
    }

    public RatingPanel() {
        numOfStar = 5;
        R = 20;
        initComponentAndStar();
    }
    
    public void initComponentAndStar() {
        initComponents();
        this.setFocusable(true);
        this.addMouseListener(this);
        this.setSize((int) Math.round(R) * numOfStar * 2 + numOfStar * 10 + 10, (int) Math.round(R) * 2 + 40);
        double x = this.getHeight() / 2;
        double y = R + 10;
        for (int i = 0; i < numOfStar; i++) {
            Star s = new Star(x, y, R);
            startList.add(s);
            y += R + 10 + R;
        }
    }

    public double getRate() {
        double sum = 0;
        double rate = 0;
        for (Star s : startList) {
            if (YPos >= s.getYmin() && YPos < s.getYmax()) {
                rate += YPos - s.getYmin();
            } else if (YPos >= s.getYmax()) {
                rate += s.getYmax() - s.getYmin();
            }
            
            sum += s.getYmax() - s.getYmin();
        }
        double res = rate / sum * 100;
        System.out.println("Rating: " + res);
        return (res);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(0, 153, 153));
        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void paint(Graphics g) {
        g.setColor(this.getBackground());
        g.clearRect(0, 0, this.getWidth(), this.getHeight());
        g.fillRect(0, 0, this.getWidth(), this.getHeight());
        for (Star s : startList) {
            s.draw(g, YPos);
        }
        DecimalFormat df = new DecimalFormat("#0.00");
        g.drawString("(" + df.format(getRate()) + "%)", this.getWidth() - 50, (int) (R*2 + 35));
    }

    @Override
    public void mouseClicked(MouseEvent e) {
        YPos = e.getX();
        repaint();
        double rating = getRate();
    }

    @Override
    public void mousePressed(MouseEvent e) {

    }

    @Override
    public void mouseReleased(MouseEvent e) {

    }

    @Override
    public void mouseEntered(MouseEvent e) {

    }

    @Override
    public void mouseExited(MouseEvent e) {

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
